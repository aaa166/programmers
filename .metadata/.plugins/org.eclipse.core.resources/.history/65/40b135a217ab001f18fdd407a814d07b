package programmers;

public class Application {

	public static void main(String[] args) {
//		표 편집
		String[] cmd = new String[] {"D 2","C","U 3","C","D 4","C","U 2","Z","Z"};
//		new Programmers().solution1(8,3,cmd);
//		new Programmers().solution2(8,2,cmd);
		
//		숫자 블록
//		long begin =1;
//		long end =10;
//		new Programmers().solution3(begin,end);
		
//		조이스틱
//		String name ="JEROEN";
//		String name2 ="JAN";
//		new Programmers().solution4(name);
		
//		입국심사 
		int n = 6;
		int[] times = new int[] {7,10};
		new Programmers().solution5(n,times);
		
		
//  	멀쩡한 사각형  
//		int W =8;
//		int H =12;
//		new Programmers().solution6(W,H);
		
		
//  	점 찍기
//		int k =1;
//		int d =5;
//		new Programmers().solution8(k,d);
		
		
//  풍선 터트리기  
//		int[] a = {9,-1,-5};
//		int[] a = {-16,27,65,-2,58,-92,-71,-68,-61,-33};
//		new Programmers().solution9(a);
		
		
//		자물쇠와 열쇠(X)
//		int[][] key = {{0, 0, 0}, {1, 0, 0}, {0, 1, 1}};
//		int[][] lock = {{0, 1, 1}, {1, 1, 0}, {1, 0, 1}};
//		new Programmers().solution10(key,lock);
		
		
//		가장 큰 정사각형 찾기(X)
//		int[][] board = {{0,1,1,1},{1,1,1,1},{1,1,1,1},{0,0,1,0}};
//		int[][] board2 = {{0,0,1,1},{1,1,1,1}};
//		new Programmers().solution11(board);
		
		
		
//	 	숫자 카드 나누기
//		int[] arrayA = {10, 20};
//		int[] arrayB = {5, 17};
//		new Programmers().solution12(arrayA,arrayB);
		
//	 	가장 큰 수
//		int[] numbers = {6,10,2};
//		int[] numbers2 = {3,30,34,5,9};
//		new Programmers().solution13(numbers);
		
//	 	햄버거 만들기
//		int[] ingredient = {2, 1, 1, 2, 3, 1, 2, 3, 1};
//		int[] ingredient2 = {1, 3, 2, 1, 2, 1, 3, 1, 2};
//		new Programmers().solution14(ingredient);
		
//		2개 이하로 다른 비트
//		long[] numbers = {2,7};
//		new Programmers().solution15(numbers);
		
//		두 큐 합 같게 만들기(x)
//		int[] queue1 = {3, 2, 7, 2};
//		int[] queue2 = {4, 6, 5, 1};
//		new Programmers().solution16(queue1,queue2);
		
		
//		소수 찾기
//		String numbers = "17";
//		String numbers2 = "011";
//		new Programmers().solution17(numbers);
		
//		다리를 지나는 트럭
//		int bridge_length = 2;
//		int weight = 10;
//		int[] truck_weights = {7,4,5,6};
		
//		int bridge_length = 100;
//		int weight = 100;
//		int[] truck_weights = {10,10,10,10,10,10,10,10,10,10};
		
//		new Programmers().solution18(bridge_length,weight,truck_weights);
		
//		평행
//		int[][] dots = {{1, 4}, {9, 2}, {3, 8}, {11, 6}};
//		new Programmers().solution19(dots);
		
//		연속된 부분 수열의 합
//		int[] sequence = {2, 2, 2, 2, 2};
//		int k = 6;
//		new Programmers().solution20(sequence,k);
		
//		삼각 달팽이
		int n = 4;
		new Programmers().solution21(n);
		
	}

}
